package main

////摩尔投票法,先假设第一个数过半数并设cnt=1；遍历后面的数如果相同则cnt+1，
//// 不同则减一，当cnt为0时则更换新的数字为候选数（成立前提：有出现次数大于n/2的数存在）
//
//// 摩尔投票法：
//
////核心就是对拼消耗。
//
////玩一个诸侯争霸的游戏，假设你方人口超过总人口一半以上，并且能保证每个人口出去干仗都能一对一同归于尽。最后还有人活下来的国家就是胜利。
//
////那就大混战呗，最差所有人都联合起来对付你（对应你每次选择作为计数器的数都是众数），或者其他国家也会相互攻击（会选择其他数作为计数器的数），但是只要你们不要内斗，最后肯定你赢。
//
////最后能剩下的必定是自己人。

func majorityElement(nums []int) int {

	res := 0
	cnt := 0
	for _, num := range nums {
		if cnt == 0 {
			res = num
			cnt++
		}else{
			if res == num {
				cnt++
			}else{
				cnt--
			}
		}
	}

	return res
}

func main() {

}
